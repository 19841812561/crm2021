<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.crm.mapper.CourseOrderMapper">
    <!--    公共的sql片段-->
    <sql id="search_where">
        <where>
            1=1
            <if test="condition.name != null and condition.name != ''">
                and name like '%${condition.name}%'
            </if>
            <if test="condition.address != null and condition.address != ''">
                and address like '%${condition.address}%'
            </if>
            <if test="condition.email != null and condition.email != ''">
                and email like '%${condition.email}%'
            </if>
            <if test="condition.username != null and condition.username != ''">
                and username like '%${condition.username}%'
            </if>

        </where>
    </sql>
    <select id="findCountByMap" parameterType="map" resultType="int">
        select count(*) from consumer
        <include refid="search_where"></include>
    </select>

    <select id="findListByMap" parameterType="map" resultType="CourseOrder">
        select * from consumer
        <include refid="search_where"></include>
        order by id limit #{start },#{pageSize};

    </select>

    <insert id="insert" parameterType="courseOrder">
        insert into consumer
        (id, name, gender, age, address, qq, email, username, password, count, power)
        values (null, #{name}, #{gender}, #{age}, #{address}, #{qq}, #{email}, #{username}, #{password}, #{count},
                '1')
    </insert>

    <select id="findByOrderId" parameterType="string" resultType="courseOrder">
        select *
        from consumer
        where id = #{id};
    </select>

    <delete id="deleteByOrderId" parameterType="String">
        delete
        from consumer
        where id = #{id};
    </delete>

    <update id="update" parameterType="courseOrder">
        update consumer
        set name    = #{name},
            gender=#{gender},
            age=#{age},
            address=#{address},
            qq=#{qq},
            email=#{email},
            username=#{username},
            password=#{password},
            count   = #{count },
            power   = #{power}
        where id = #{id}
    </update>

    <select id="getAddressCount" resultType="AddressCount">
        select left (address, 2) as address, count (*) as number
        from consumer
        group by left (address, 2);
    </select>

    <select id="findUserCount" resultType="String">
        select count(id)
        from consumer;
    </select>

</mapper>