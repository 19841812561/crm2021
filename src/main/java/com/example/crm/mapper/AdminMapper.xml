<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.crm.mapper.AdminMapper">
    <!--    公共的sql片段-->
    <sql id="search_where">
        <where>
            1 = 1
            <if test="condition.username != null and condition.username != ''">
                and username like '%${condition.username}%'
            </if>
            <if test="condition.identity != null and condition.identity != ''">
                and identity like '%${condition.identity}%'
            </if>
            <if test="condition.power != null and condition.power != ''">
                and power like '%${condition.power}%'
            </if>
            <if test="condition.start != null and condition.start != ''">
                and start like '%${condition.start}%'
            </if>

        </where>
    </sql>

    <select id="findCountByMap" parameterType="map" resultType="int">
        select count(*) from admin
        <include refid="search_where"></include>
    </select>
    <select id="findListByMap" parameterType="map" resultType="admin">
        select * from admin
        <include refid="search_where"></include>
        order by id limit #{start },#{pageSize};

    </select>

    <insert id="insert" parameterType="admin">
        insert into admin
        (id, name, password, gender, username, count, identity, power, start, state)
        values (null, #{name}, #{password}, #{gender}, #{username}, #{count}, #{identity}, #{power}, #{start}, '0')
    </insert>

    <select id="findByOrderId" parameterType="string" resultType="admin">
        select *
        from admin
        where id = #{id};
    </select>

    <delete id="deleteByOrderId" parameterType="String">
        delete
        from admin
        where id = #{id};
    </delete>

    <update id="update" parameterType="admin">
        update admin
        set name=#{name},
            password=#{password},
            gender=#{gender},
            username=#{username},
            count=#{count},
            identity =#{identity},
            power=#{power},
            start=#{start},
            state='0'
        where id = #{id}
    </update>

    <update id="updateState" parameterType="state">
        update admin
        set state=#{state}
        where id = #{id}
    </update>

    <select id="getAddressCount" resultType="AddressCount">
        select left (address, 2) as address, count (*) as number
        from admin
        group by left (address, 2);
    </select>


    <select id="findByAdminNameAndPassword" resultType="admin">
        select *
        from admin
        where username = #{username};
    </select>


    <select id="findAdminCount" resultType="String">
        select count(*) as count
        from admin;
    </select>
</mapper>